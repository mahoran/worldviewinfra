{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "existingVNETName": {
        "type": "string",
        "metadata": {
          "description": "Existing VNET that contains the domain controller"
        }
      },
      "existingSubnetName": {
        "type": "string",
        "metadata": {
          "description": "Existing subnet that contains the domain controller"
        }
      },
      "existingVNETRGName": {
        "type": "string",
        "metadata": {
          "description": "Existing VNET resource Group name"
        }
      },
      "vmSize": {
        "type": "string",
        "defaultValue": "Standard_A2",
        "metadata": {
          "description": "The size of the virtual machines"
        }
      },
      "domainToJoin": {
        "type": "string",
        "metadata": {
          "description": "The FQDN of the AD domain"
        }
      },
      "domainUsername": {
        "type": "string",
        "metadata": {
          "description": "Username of the account on the domain"
        }
      },
      "domainPassword": {
        "type": "securestring",
        "metadata": {
          "description": "Password of the account on the domain"
        }
      },
      "ouPath": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "Specifies an organizational unit (OU) for the domain account. Enter the full distinguished name of the OU in quotation marks. Example: \"OU=testOU; DC=domain; DC=Domain; DC=com\""
        }
      },
      "domainJoinOptions": {
        "type": "int",
        "defaultValue": 3,
        "metadata": {
          "description": "Set of bit flags that define the join options. Default value of 3 is a combination of NETSETUP_JOIN_DOMAIN (0x00000001) & NETSETUP_ACCT_CREATE (0x00000002) i.e. will join the domain and create the account on the domain. For more information see https://msdn.microsoft.com/en-us/library/aa392154(v=vs.85).aspx"
        }
      },
      "vmAdminUsername": {
        "type": "string",
        "metadata": {
          "description": "The name of the administrator of the new VM and the domain. Exclusion list: 'admin','administrator"
        }
      },
      "vmAdminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "The password for the administrator account of the new VM and the domain"
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "dataDiskSizeGB": {
        "type": "int",
        "defaultValue": 1024,
        "metadata": {
          "description": "Data Disk Size in GB."
        }
      },
      "vmCount": {
        "type": "int",
        "defaultValue": 1,
        "metadata": {
          "description": "Number of VMs to create."
        }
      },
      "vmNamePrefix": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "VM Name Prefix."
        }
      },
      "imageName": {
        "type": "string",
        "metadata": {
          "description": "Custom VM Image"
        }       
      },
      "imageResourceGroup": {
        "type": "string",
        "metadata": {
          "description": "Custom VM Image"
        }       
      },     
      "commandToExecute": {
        "type": "string",
        "metadata": {
          "description": "Powershell script to execute"
        }       
      },    
      "customScriptFileURIs": {
        "type": "array",
        "metadata": {
          "description": "List of scripts that need to be execute in the VM"
        }       
      },               
      "workspaceName": {
        "type": "string",
        "metadata": {
          "description": "OMS Workspace name for the VM"
        }
      },
      "workspaceResourceGroup": {
        "type": "string",
        "metadata": {
          "description": "OMS Workspace resource group name"
        }
      },
      "vaultName": {
        "type": "string",
        "metadata": {
          "description": "Name of the Recovery Services Vault"
        }
      },
      "vaultRGName": {
        "type": "string",
        "metadata": {
          "description": "Name of the resource group for Recovery Services Vault"
        }
      },
      "backupPolicyName": {
        "type": "string",
        "metadata": {
          "description": "Name of the Backup Policy"
        }
      },
      "existingdiagnosticsStorageAccountName": {
        "type": "string",
        "metadata": {
          "description": "The name of an existing storage account to which diagnostics data will be transferred."
        }
      },
      "existingdiagnosticsStorageResourceGroup": {
        "type": "string",
        "metadata": {
          "description": "The resource group for the storage account specified in existingdiagnosticsStorageAccountName"
        }
      },
        "customScriptStorageAccountName": {
          "type": "string",
          "metadata": {
            "description": "The name of an existing storage account where scripts will be stored."
          }
        },
        "customScriptStorageResourceGroup": {
          "type": "string",
          "metadata": {
            "description": "The resource group for the storage account where scripts are stored"
          }        
      },
      "tagValues": {
        "type": "object",
        "defaultValue": {
          "Commerce": "DS4",
          "WVClientType": "Production",
          "WVenvironment": "V2",
          "WVVMType": "Web"
        }
      }
    },
    "variables": {
      "availabilitySetName": "[concat('as',parameters('vmNamePrefix'))]",
      "imagePublisher": "MicrosoftWindowsServer",
      "imageOffer": "WindowsServer",
      "backupFabric": "Azure",
      "windowsOSVersion": "2016-Datacenter",
      "nicName": "[concat(parameters('vmNamePrefix'),'Nic')]",
      "subnetId": "[resourceId(parameters('existingVNETRGName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('existingVNETName'), parameters('existingSubnetName'))]",
      "vmResourceGroup": "[resourceGroup().name]",
      "accountid": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/',parameters('existingdiagnosticsStorageResourceGroup'), '/providers/','Microsoft.Storage/storageAccounts/', parameters('existingdiagnosticsStorageAccountName'))]",
      "wadlogs": "<WadCfg> <DiagnosticMonitorConfiguration overallQuotaInMB=\"4096\" xmlns=\"http://schemas.microsoft.com/ServiceHosting/2010/10/DiagnosticsConfiguration\"> <DiagnosticInfrastructureLogs scheduledTransferLogLevelFilter=\"Error\"/> <WindowsEventLog scheduledTransferPeriod=\"PT1M\" > <DataSource name=\"Application!*[System[(Level = 1 or Level = 2)]]\" /> <DataSource name=\"Security!*[System[(Level = 1 or Level = 2)]]\" /> <DataSource name=\"System!*[System[(Level = 1 or Level = 2)]]\" /></WindowsEventLog>",
      "wadperfcounters1": "<PerformanceCounters scheduledTransferPeriod=\"PT1M\"><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Processor Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU utilization\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Privileged Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU privileged time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% User Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU user time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor Information(_Total)\\Processor Frequency\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"CPU frequency\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\System\\Processes\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Processes\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Thread Count\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Threads\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Handle Count\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Handles\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\% Committed Bytes In Use\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Memory usage\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Available Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory available\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Committed Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory committed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Commit Limit\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory commit limit\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active time\" locale=\"en-us\"/></PerformanceCounterConfiguration>",
      "wadperfcounters2": "<PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Read Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active read time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Write Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active write time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Transfers/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Reads/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk read operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Writes/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk write operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Read Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk read speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Write Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk write speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\LogicalDisk(_Total)\\% Free Space\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk free space (percentage)\" locale=\"en-us\"/></PerformanceCounterConfiguration></PerformanceCounters>",
      "wadcfgxstart": "[concat(variables('wadlogs'), variables('wadperfcounters1'), variables('wadperfcounters2'), '<Metrics resourceId=\"')]",
      "wadmetricsresourceid": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name , '/providers/', 'Microsoft.Compute/virtualMachines/')]",
      "wadcfgxend": "\"><MetricAggregation scheduledTransferPeriod=\"PT1H\"/><MetricAggregation scheduledTransferPeriod=\"PT1M\"/></Metrics></DiagnosticMonitorConfiguration></WadCfg>"
    },
    "resources": [
      {
        "apiVersion": "2018-04-01",
        "type": "Microsoft.Compute/availabilitySets",
        "location": "[parameters('location')]",
        "name": "[variables('availabilitySetName')]",
        "tags": "[parameters('tagValues')]",
        "properties": {
          "PlatformUpdateDomainCount": 2,
          "PlatformFaultDomainCount": 2
        },
        "sku": {
          "name": "Aligned"
        }
      },
      {
        "apiVersion": "2018-04-01",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[concat(variables('nicName'), copyindex('nicLoop',1))]",
        "location": "[parameters('location')]",
        "tags": "[parameters('tagValues')]",
        "copy": {
          "name": "nicLoop",
          "count": "[parameters('vmCount')]"
        },
        "dependsOn": [
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "[variables('subnetId')]"
                }
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2018-04-01",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[concat(parameters('vmNamePrefix'), copyindex('virtualMachineLoop',1))]",
        "location": "[parameters('location')]",
        "tags": "[parameters('tagValues')]",
        "copy": {
          "name": "virtualMachineLoop",
          "count": "[parameters('vmCount')]"
        },
        "dependsOn": [
          "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),copyindex('virtualMachineLoop',1)))]",
          "nicLoop",
          "[variables('availabilitySetName')]"
        ],
        "properties": {
          "availabilitySet": {
            "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
          },
          "hardwareProfile": {
            "vmSize": "[parameters('vmSize')]"
          },
          "osProfile": {
            "computerName": "[concat(parameters('vmNamePrefix'), copyIndex('virtualMachineLoop',1))]",
            "adminUsername": "[parameters('vmAdminUsername')]",
            "adminPassword": "[parameters('vmAdminPassword')]"
          },
          "storageProfile": {
            "imageReference": {
              "id": "[resourceId(parameters('imageResourceGroup'),  'Microsoft.Compute/images', parameters('imageName'))]"
            },
            "osDisk": {
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'), copyindex('virtualMachineLoop',1)))]"
              }
            ]
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": "true",
              "storageUri": "[reference(variables('accountId'), '2015-06-15').primaryEndpoints.blob]"
            }
          }
        },
        "resources": [
          {
            "type": "extensions",
            "name": "Microsoft.EnterpriseCloud.Monitoring",
            "apiVersion": "2017-03-30",
            "location": "[parameters('location')]",
            "dependsOn": [
              "[concat('Microsoft.Compute/virtualMachines/', parameters('vmNamePrefix'),copyindex('virtualMachineLoop',1))]"
            ],
            "properties": {
              "publisher": "Microsoft.EnterpriseCloud.Monitoring",
              "type": "MicrosoftMonitoringAgent",
              "typeHandlerVersion": "1.0",
              "autoUpgradeMinorVersion": true,
              "settings": {
                "workspaceId": "[reference(resourceId(parameters('workspaceResourceGroup'),'Microsoft.OperationalInsights/workspaces/', parameters('workspaceName')), '2015-03-20').customerId]"
              },
              "protectedSettings": {
                "workspaceKey": "[listKeys(resourceId(parameters('workspaceResourceGroup'),'Microsoft.OperationalInsights/workspaces/', parameters('workspaceName')), '2015-03-20').primarySharedKey]"
              }
            }
          },
          {
            "name": "Microsoft.Insights.VMDiagnosticsSettings",
            "type": "extensions",
            "location": "[parameters('location')]",
            "apiVersion": "2015-06-15",
            "dependsOn": [
              "[concat('Microsoft.Compute/virtualMachines/', parameters('vmNamePrefix'),copyindex('virtualMachineLoop',1))]"
            ],
            "tags": {
              "displayName": "AzureDiagnostics"
            },
            "properties": {
              "publisher": "Microsoft.Azure.Diagnostics",
              "type": "IaaSDiagnostics",
              "typeHandlerVersion": "1.5",
              "autoUpgradeMinorVersion": true,
              "settings": {
                "xmlCfg": "[base64(concat(variables('wadcfgxstart'), variables('wadmetricsresourceid'), concat(parameters('vmNamePrefix'), copyindex('virtualMachineLoop',1)), variables('wadcfgxend')))]",
                "workspaceId": "[reference(resourceId(parameters('workspaceResourceGroup'),'Microsoft.OperationalInsights/workspaces/', parameters('workspaceName')), '2015-03-20').customerId]",
                "storageAccount": "[parameters('existingdiagnosticsStorageAccountName')]"
              },
              "protectedSettings": {
                "workspaceKey": "[listKeys(resourceId(parameters('workspaceResourceGroup'),'Microsoft.OperationalInsights/workspaces/', parameters('workspaceName')), '2015-03-20').primarySharedKey]",
                "storageAccountName": "[parameters('existingdiagnosticsStorageAccountName')]",
                "storageAccountKey": "[listkeys(variables('accountid'), '2015-06-15').key1]",
                "storageAccountEndPoint": "https://core.windows.net"
              }
            }
          },
          {
            "apiVersion": "2015-06-15",
            "type": "extensions",
            "name": "[concat('configApp',copyIndex('virtualMachineLoop',1))]",
            "location": "[resourceGroup().location]",       
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('vmNamePrefix'),copyindex('virtualMachineLoop',1))]",
                "domainjoinExtLoop"
            ],
            "tags": {
                "displayName": "config-app"
            },
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.9",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": "[parameters('customScriptFileURIs')]"
                },
                "protectedSettings": {
                    "commandToExecute": "[parameters('commandToExecute')]",
                    "storageAccountName" : "[parameters('customScriptStorageAccountName')]",
                    "storageAccountKey" : "[listKeys(resourceId(parameters('customScriptStorageResourceGroup'),'Microsoft.Storage/storageAccounts',parameters('customScriptStorageAccountName')),'2016-01-01').keys[0].value]"
                }
            }
          }
    
        ]
      },
      {
        "apiVersion": "2015-06-15",
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "[concat(parameters('vmNamePrefix'),copyindex('domainjoinExtLoop',1),'/joindomain')]",
        "location": "[parameters('location')]",
        "copy": {
          "name": "domainjoinExtLoop",
          "count": "[parameters('vmCount')]"
        },
        "dependsOn": [
          "[concat('Microsoft.Compute/virtualMachines/', parameters('vmNamePrefix'),copyindex('domainjoinExtLoop',1))]"
        ],
        "properties": {
          "publisher": "Microsoft.Compute",
          "type": "JsonADDomainExtension",
          "typeHandlerVersion": "1.3",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "Name": "[parameters('domainToJoin')]",
            "OUPath": "[parameters('ouPath')]",
            "User": "[concat(parameters('domainToJoin'), '\\', parameters('domainUsername'))]",
            "Restart": "true",
            "Options": "[parameters('domainJoinOptions')]"
          },
          "protectedSettings": {
            "Password": "[parameters('domainPassword')]"
          }
        }
      },      
      {
        "apiVersion": "2017-05-10",
        "name": "[concat('backupNestedTemplateVM',copyIndex('rsvLoop',1))]",
        "type": "Microsoft.Resources/deployments",
        "resourceGroup": "[parameters('vaultRGName')]",
        "copy": {
                  "name": "rsvLoop",
                  "count": "[parameters('vmCount')]"
                },
        "dependsOn": [
                  "virtualMachineLoop"
        ],        
        "properties": {
          "mode": "Incremental",
          "template": {
            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "resources": [
              {
                "apiVersion": "2016-12-01",
                "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
                "name": "[concat(parameters('vaultName'), '/', variables('backupFabric'), '/', 'iaasvmcontainer;iaasvmcontainerv2;', variables('vmResourceGroup'), ';', parameters('vmNamePrefix'),copyIndex('rsvLoop',1), '/', 'vm;iaasvmcontainerv2;', variables('vmResourceGroup'), ';', parameters('vmNamePrefix'),copyIndex('rsvLoop',1))]",
                "properties": {
                  "protectedItemType": "Microsoft.Compute/virtualMachines",
                  "policyId": "[resourceId(parameters('vaultRGName'),'Microsoft.RecoveryServices/vaults/backupPolicies', parameters('vaultName'), parameters('backupPolicyName'))]",
                  "sourceResourceId": "[resourceId('Microsoft.Compute/virtualMachines/', concat(parameters('vmNamePrefix'),copyIndex('rsvLoop',1)))]"
                }
              }
            ]
          }
        }
      }
    ]
  }