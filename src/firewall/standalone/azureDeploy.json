{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01-preview/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "newStorageAccount": {
            "type": "string",
            "metadata": {
                "description": "Globally unique lowercase name of your storage account"
            }
        },
        "storageAccountType": {
            "type": "string",
            "metadata": {
                "description": "The type of the Storage Account created"
            },
            "defaultValue": "Standard_LRS"
        },
        "storageAccountNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "Description": "Indicates whether the Storage Account is new or existing"
            }
        },
        "existingStorageAccountRG": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Storage Resource Group of the Existing VM."
            }
        },
        "dnsNameForPublicIP": {
            "type": "string",
            "metadata": {
                "description": "Globally unique DNS name to access management interface of VM-Series firewall"
            }
        },
        "dnsNameForPublicIPUntrust": {
            "type": "string",
            "metadata": {
                "description": "Globally unique DNS name to access untrust interface of VM-Series firewall"
            }
        },
        "vmName": {
            "type": "string",
            "metadata": {
                "description": "Name of VM-Series VM in the Azure portal"
            }
        },
        "adminUserName": {
            "type": "string",
            "metadata": {
                "description": "Username for VM-Series administrator"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for VM-Series administrator"
            }
        },
        "authenticationType": {
            "type": "string",
            "metadata": {
                "descritpion": "Type of authentication "
            },
            "allowedValues": [
                "sshPublicKey",
                "password"
            ],
            "defaultValue": "password"
        },
        "sshKey": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "SSH rsa public key file as a string."
            }
        },
        "vmSize": {
            "type": "string",
            "allowedValues": [
                "Standard_D3",
                "Standard_D4",
                "Standard_D3_v2"
            ],
            "metadata": {
                "description": "Azure VM size for VM-Series"
            }
        },
        "srcIPInboundNSG": {
            "type": "string",
            "metadata": {
                "description": "Your source public IP address. Added to the inbound DefaultNSG on eth0 (MGMT)"
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "metadata": {
                "description": "Name of the virtual network that the consumer wants to use"
            },
            "defaultValue": "panVnet"
        },
        "virtualNetworkRGName": {
            "type": "string",
            "defaultValue": "192.168.0.0/16",
            "metadata": {
                "description": "Virtual network resource group name"
            }
        },
        "virtualNetworkAddressPrefix": {
            "type": "string",
            "metadata": {
                "description": "Virtual network address prefix"
            }
        },
        "mgtSubnetName": {
            "type": "string",
            "defaultValue": "Mgmt",
            "metadata": {
                "description": "Subnet for the Mgmt"
            }
        },
        "untrustSubnetName": {
            "type": "string",
            "defaultValue": "Untrust",
            "metadata": {
                "description": "Subnet for the Untrust"
            }
        },
        "trustSubnetName": {
            "type": "string",
            "defaultValue": "Trust",
            "metadata": {
                "description": "Subnet for the Trust"
            }
        },
        "FWPrivateIPAddressUntrust": {
            "type": "string",
            "metadata": {
                "description": "Private IP for Untrust network interface"
            }
        },
        "FWPrivateIPAddressTrust": {
            "type": "string",
            "metadata": {
                "description": "Private IP for Trust network interface"
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/101-SQL-Injection-Attack-Prevention/",
            "metadata": {
              "description": "this will be the location for artifacts"
            }
          },
          "_artifactsLocationSasToken": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
              "description": "this will be the sas key to access artifacts"
            }
          }
    },
    "variables": {
        "apiVersion": "2015-06-15",
        "location": "[resourceGroup().location]",
        "imagePublisher": "paloaltonetworks",
        "imageSku": "byol",
        "imageOffer": "vmseries1",
        "fwpublicIPName": "[concat(parameters('vmName'), '-fwMgmtPublicIP')]",
        "fwpublicIPUntrustName": "[concat(parameters('vmName'), '-fwUntrustPublicIP')]",
        "nicName": "[concat(parameters('vmName'), '-eth')]",
        "publicIPAddressType": "Dynamic",
        "vnetID": "[resourceId(parameters('virtualNetworkRGName'),'Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
        "nsgname-mgmt": "[concat(parameters('vmName'), '-DefaultNSG')]",
        "subnet0Ref": "[concat(variables('vnetID'),'/subnets/',parameters('mgtSubnetName'))]",
        "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',parameters('untrustSubnetName'))]",
        "subnet2Ref": "[concat(variables('vnetID'),'/subnets/',parameters('trustSubnetName'))]",
        "baseUrl": "[parameters('_artifactsLocation')]",
        "storageAccountSetupURL": "[concat(variables('baseUrl'),'storageAccount-',parameters('storageAccountNewOrExisting'),'.json',parameters('_artifactsLocationSasToken'))]",
        "vmTemplateUrl": "[concat(variables('baseUrl'), 'virtual-machine-', parameters('authenticationType'),'.json',parameters('_artifactsLocationSasToken'))]"
    },
    "resources": [
        {
            "name": "storageAcountSetup1",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('storageAccountSetupURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "storageAccountType": {
                        "value": "[parameters('storageAccountType')]"
                    },
                    "newStorageAccount": {
                        "value": "[parameters('newStorageAccount')]"
                    },
                    "storageAccountExistingRG": {
                        "value": "[parameters('existingStorageAccountRG')]"
                    }
                }
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('fwpublicIPName')]",
            "location": "[variables('location')]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('dnsNameForPublicIP')]"
                }
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('fwpublicIPUntrustName')]",
            "location": "[variables('location')]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('dnsNameForPublicIPUntrust')]"
                }
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[concat(parameters('vmName'), '-DefaultNSG')]",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "FTPS_Port",
                        "properties": {
                            "description": "Rule FTPS Port",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "21",
                            "sourceAddressPrefix": "[parameters('srcIPInboundNSG')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 103,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Port_FTPS_Implicit",
                        "properties": {
                            "description": "Allow intra network traffic",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "990",
                            "sourceAddressPrefix": "[parameters('srcIPInboundNSG')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 104,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Port_FTPS_Data",
                        "properties": {
                            "description": "Allow intra network traffic",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3000-3100",
                            "sourceAddressPrefix": "[parameters('srcIPInboundNSG')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 210,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), '0')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('fwpublicIPName'))]"
            ],
            "tags": {
                "displayName": "[concat('NetworkInterfaces', '0')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[concat('ipconfig', '0')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables(concat('subnet','0','Ref'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), '1')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('fwpublicIPUntrustName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', parameters('vmName'), '-DefaultNSG')]"
            ],
            "tags": {
                "displayName": "[concat('NetworkInterfaces', '1')]"
            },
            "properties": {
                "enableIPForwarding": true,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',concat(parameters('vmName'), '-DefaultNSG'))]"
                  },
                "ipConfigurations": [
                    {
                        "name": "[concat('ipconfig', '1')]",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('FWPrivateIPAddressUntrust')]",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('fwpublicIPUntrustName'))]"
                            },
                            "subnet": {
                                "id": "[variables(concat('subnet','1','Ref'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), '2')]",
            "location": "[variables('location')]",
            "dependsOn": [],
            "tags": {
                "displayName": "[concat('NetworkInterfaces', '2')]"
            },
            "properties": {
                "enableIPForwarding": true,
                "ipConfigurations": [
                    {
                        "name": "[concat('ipconfig', '2')]",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('FWPrivateIPAddressTrust')]",
                            "subnet": {
                                "id": "[variables(concat('subnet','2','Ref'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "PAN-VM",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "storageAcountSetup1",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '0')]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '1')]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '2')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vmTemplateUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "vmName": {
                        "value": "[parameters('vmName')]"
                    },
                    "imageSku": {
                        "value": "[variables('imageSku')]"
                    },
                    "imageOffer": {
                        "value": "[variables('imageOffer')]"
                    },
                    "imagePublisher": {
                        "value": "[variables('imagePublisher')]"
                    },
                    "nicName": {
                        "value": "[variables('nicName')]"
                    },
                    "vmSize": {
                        "value": "[parameters('vmSize')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "newStorageAccount": {
                        "value": "[parameters('newStorageAccount')]"
                    },
                    "sshKey": {
                        "value": "[parameters('sshKey')]"
                    }
                }
            }
        }
    ]
}